#include <iostream>

using namespace std;

class fonteTensao   {
                    private: //atributo ou metodo nao é acessado fora do objeto. só o objeto pode modificar.
                    double vout;
                    double vmin;
                    double vmax;

                    public: //acessiveis por outro objeto. qualquer um acessa.
                    fonteTensao(void);
                    fonteTensao(double vmin, double vmax);
                    ~fonteTensao(void);
                    double getv(void);
                    bool setv(double v);
                    };

double fonteTensao::getv()//definindo que getv  é dessa class, pode ser que outrra classe tenha um metodo com mesmo nome
{

    return vout;
}

bool fonteTensao::setv(double v)
{
    if (v<vmin||v>vmax)
        return false;

    vout=v;
    return true;
}

//construtor sem parametros. funçao ou metodo para criar o objeto
 fonteTensao::fonteTensao(void)
{
    vout=5;
    vmin=0;
    vmax=15;
}

//construtor com parametros. funçao ou metodo para criar o objeto com parametros expecificados
 fonteTensao::fonteTensao(double valormin, double valormax)
{
    vmin=valormin;
    vmax=valormax;
    vout=5;
}

int main()
{
    fonteTensao V1;
    fonteTensao V2(-15,20);

    cout << "Tensão de saída: " << V1.getv() << "V" << endl;
    V1.setv(10);
    cout << "Tensão de saída: " << V1.getv() << "V" << endl;
    //não funciona pq passa do limite definido no setv, não da erro, compila, mas não funciona
    //V1.setv(50);
    //correto a se fazer:
    if (!V1.setv(50))
        cerr << "Excedeu limite ajustado" << endl;

    cout << "Tensão de saída: " << V1.getv() << "V" << endl;
    V2.setv(-10);
    cout << "Tensão de saída: " << V2.getv() << "V" << endl;

    return 0;
}
